// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.uca.iw.tempojobs.domain;

import es.uca.iw.tempojobs.domain.Empresa;
import es.uca.iw.tempojobs.domain.EmpresaDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect EmpresaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: EmpresaDataOnDemand: @Component;
    
    private Random EmpresaDataOnDemand.rnd = new SecureRandom();
    
    private List<Empresa> EmpresaDataOnDemand.data;
    
    public Empresa EmpresaDataOnDemand.getNewTransientEmpresa(int index) {
        Empresa obj = new Empresa();
        setActividadProfesional(obj, index);
        setApellidos(obj, index);
        setCIF(obj, index);
        setDireccion(obj, index);
        setEmail(obj, index);
        setEmpleados(obj, index);
        setFechaNac(obj, index);
        setNombre(obj, index);
        setTelefono(obj, index);
        setTitulo(obj, index);
        return obj;
    }
    
    public void EmpresaDataOnDemand.setActividadProfesional(Empresa obj, int index) {
        String actividadProfesional = "actividadProfesional_" + index;
        if (actividadProfesional.length() > 64) {
            actividadProfesional = actividadProfesional.substring(0, 64);
        }
        obj.setActividadProfesional(actividadProfesional);
    }
    
    public void EmpresaDataOnDemand.setApellidos(Empresa obj, int index) {
        String apellidos = "apellidos_" + index;
        if (apellidos.length() > 64) {
            apellidos = apellidos.substring(0, 64);
        }
        obj.setApellidos(apellidos);
    }
    
    public void EmpresaDataOnDemand.setCIF(Empresa obj, int index) {
        String cIF = "cIFxxxx_" + index;
        if (cIF.length() > 16) {
            cIF = cIF.substring(0, 16);
        }
        obj.setCIF(cIF);
    }
    
    public void EmpresaDataOnDemand.setDireccion(Empresa obj, int index) {
        String direccion = "direccion_" + index;
        if (direccion.length() > 128) {
            direccion = direccion.substring(0, 128);
        }
        obj.setDireccion(direccion);
    }
    
    public void EmpresaDataOnDemand.setEmail(Empresa obj, int index) {
        String email = "foo" + index + "@bar.com";
        if (email.length() > 128) {
            email = email.substring(0, 128);
        }
        obj.setEmail(email);
    }
    
    public void EmpresaDataOnDemand.setEmpleados(Empresa obj, int index) {
        Integer empleados = new Integer(index);
        obj.setEmpleados(empleados);
    }
    
    public void EmpresaDataOnDemand.setFechaNac(Empresa obj, int index) {
        Date fechaNac = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setFechaNac(fechaNac);
    }
    
    public void EmpresaDataOnDemand.setNombre(Empresa obj, int index) {
        String nombre = "nombre_" + index;
        if (nombre.length() > 32) {
            nombre = nombre.substring(0, 32);
        }
        obj.setNombre(nombre);
    }
    
    public void EmpresaDataOnDemand.setTelefono(Empresa obj, int index) {
        String telefono = "telefono_" + index;
        if (telefono.length() > 16) {
            telefono = telefono.substring(0, 16);
        }
        obj.setTelefono(telefono);
    }
    
    public void EmpresaDataOnDemand.setTitulo(Empresa obj, int index) {
        String titulo = "titulo_" + index;
        if (titulo.length() > 32) {
            titulo = titulo.substring(0, 32);
        }
        obj.setTitulo(titulo);
    }
    
    public Empresa EmpresaDataOnDemand.getSpecificEmpresa(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Empresa obj = data.get(index);
        Long id = obj.getId();
        return Empresa.findEmpresa(id);
    }
    
    public Empresa EmpresaDataOnDemand.getRandomEmpresa() {
        init();
        Empresa obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Empresa.findEmpresa(id);
    }
    
    public boolean EmpresaDataOnDemand.modifyEmpresa(Empresa obj) {
        return false;
    }
    
    public void EmpresaDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Empresa.findEmpresaEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Empresa' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Empresa>();
        for (int i = 0; i < 10; i++) {
            Empresa obj = getNewTransientEmpresa(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
